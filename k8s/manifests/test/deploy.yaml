apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: testapp
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: default
  labels:
    app: testapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testapp
  template:
    metadata:
      labels:
        app: testapp
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx-test
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: "0.6"
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 50Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
  - host: ${fqdn}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress-healthz
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  # This rule should be a catch all and accessible behind the App Gateway since as it is not specific.  Could try to scope to IP address only...??
  - http:
      paths:
      - path: /healthz
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 80